---

# This manifest creates a network policy to allow traffic to Alertmanager
# (TCP port 9093).
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.calico-node-alertmanager
  namespace: tigera-prometheus
spec:
  order: 1
  tier: allow-tigera
  selector: (app == 'alertmanager' && alertmanager == 'calico-node-alertmanager') || (app.kubernetes.io/name == 'alertmanager' && alertmanager == 'calico-node-alertmanager')
  types:
    - Ingress
    - Egress
  ingress:
  - action: Allow
    protocol: TCP
    destination:
      ports: [9093]
  egress:
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows communicate with kube-dns.
      namespaceSelector: projectcalico.org/name == 'kube-system'
      selector: k8s-app == 'kube-dns'
      ports: [53]
  # This rule allows all kind of egress traffic from AlertManager.
  # recommended to customize egress flow, based on configuration.
  - action: Allow
    protocol: TCP
---

# This manifest creates a network policy to allow traffic between
# Alertmanagers for HA configuration (TCP port 6783).
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.calico-node-alertmanager-mesh
  namespace: tigera-prometheus
spec:
  order: 1
  tier: allow-tigera
  selector: (app == 'alertmanager' && alertmanager == 'calico-node-alertmanager') || (app.kubernetes.io/name == 'alertmanager' && alertmanager == 'calico-node-alertmanager')
  types:
    - Ingress
    - Egress
  ingress:
  - action: Allow
    protocol: TCP
    destination:
      selector: (app == 'alertmanager' && alertmanager == 'calico-node-alertmanager') || (app.kubernetes.io/name == 'alertmanager' && alertmanager == 'calico-node-alertmanager')
      ports: [9094]
  - action: Allow
    protocol: UDP
    destination:
      selector: (app == 'alertmanager' && alertmanager == 'calico-node-alertmanager') || (app.kubernetes.io/name == 'alertmanager' && alertmanager == 'calico-node-alertmanager')
  egress:
  - action: Allow
    protocol: TCP
    destination:
      selector: (app == 'alertmanager' && alertmanager == 'calico-node-alertmanager') || (app.kubernetes.io/name == 'alertmanager' && alertmanager == 'calico-node-alertmanager')
      ports: [9094]
  - action: Allow
    protocol: UDP
    destination:
      selector: (app == 'alertmanager' && alertmanager == 'calico-node-alertmanager') || (app.kubernetes.io/name == 'alertmanager' && alertmanager == 'calico-node-alertmanager')
      ports: [9094]
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows communicate with kube-dns.
      namespaceSelector: projectcalico.org/name == 'kube-system'
      selector: k8s-app == 'kube-dns'
      ports: [53]
---

# This manifest creates a network policy to allow traffic to access the
# Prometheus (TCP port 9090 or 9095).
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.prometheus
  namespace: tigera-prometheus
spec:
  order: 1
  tier: allow-tigera
  selector: (app == 'prometheus' && prometheus == 'calico-node-prometheus') || (app.kubernetes.io/name == 'prometheus' && prometheus == 'calico-node-prometheus')
  types:
    - Ingress
    - Egress
  ingress:
  - action: Allow
    protocol: TCP
    destination:
      ports: [9090, 9095]
  egress:
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows communicate with kube-dns.
      namespaceSelector: projectcalico.org/name == 'kube-system'
      selector: k8s-app == 'kube-dns'
      ports: [53]
  - action: Allow
    protocol: TCP
    destination:
      # This egress rule in this policy allows prometheus to communicate with kubernetes api server.
      namespaceSelector: projectcalico.org/name == 'default'
      selector: (provider == 'kubernetes' && component == 'apiserver' && endpoints.projectcalico.org/serviceName == 'kubernetes')
      # By default, kubernetes api server listens on [12388, 6443, 443]. If Api server is customized to listen
      # on different port, Include the port number below. DockerEE uses port 12388 for kubernetes apiserver service.
      ports: [443, 6443, 12388]
  - action: Allow
    protocol: TCP
    destination:
      ports: [9081]
  - action: Allow
    protocol: TCP
    destination:
      # Egress access for BGP metrics
      ports: [9900]
  - action: Allow
    protocol: TCP
    destination:
      # Egress access to alertmanager
      selector: (app == 'alertmanager' && alertmanager == 'calico-node-alertmanager') || (app.kubernetes.io/name == 'alertmanager' && alertmanager == 'calico-node-alertmanager')
      ports: [9093]
---

# This manifest creates a network policy to allow traffic to access through tigera-prometheus-api.
# Prometheus (TCP port 9090).
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.tigera-prometheus-api
  namespace: tigera-prometheus
spec:
  order: 1
  tier: allow-tigera
  selector: k8s-app == 'tigera-prometheus-api'
  types:
    - Ingress
    - Egress
  ingress:
    # for incoming connections from the kube-apiserver
  - action: Allow
    protocol: TCP
    destination:
      ports: [9090, 9095]
  egress:
  - action: Allow
    protocol: UDP
    destination:
      # This rule allows communicate with kube-dns.
      namespaceSelector: projectcalico.org/name == 'kube-system'
      selector: k8s-app == 'kube-dns'
      ports: [53]
  - action: Allow
    # Egress access for tigera-prometheus-service
    # to access the prometheus instance
    protocol: TCP
    destination:
      selector: prometheus == "calico-node-prometheus"
      namespaceSelector: projectcalico.org/name == "tigera-prometheus"
      ports: [9090, 9095]
---

# This manifest creates a network policy to allow the prometheus-operator
# to access the kube-apiserver
apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: allow-tigera.prometheus-operator
  namespace: tigera-prometheus
spec:
  order: 1
  tier: allow-tigera
  selector: operator == 'prometheus'
  types:
    - Egress
  egress:
    - action: Allow
      protocol: UDP
      destination:
        # This rule allows communicate with kube-dns.
        namespaceSelector: projectcalico.org/name == 'kube-system'
        selector: k8s-app == 'kube-dns'
        ports: [53]
    - action: Allow
      protocol: TCP
      destination:
        # This egress rule in this policy allows prometheus-operator to communicate with kubernetes api server.
        namespaceSelector: projectcalico.org/name == 'default'
        selector: (provider == 'kubernetes' && component == 'apiserver' && endpoints.projectcalico.org/serviceName == 'kubernetes')
        # By default, kubernetes api server listens on [12388, 6443, 443]. If Api server is customized to listen
        # on different port, Include the port number below. DockerEE uses port 12388 for kubernetes apiserver service.
        ports: [443, 6443, 12388]


---

kind: NetworkPolicy
apiVersion: projectcalico.org/v3
metadata:
  name: allow-tigera.default-deny
  namespace: tigera-prometheus
spec:
  tier: allow-tigera
  selector: all()
  types:
  - Ingress
  - Egress

---